{"version":3,"sources":["components/timerComponents/button.js","reducersFolder/mainReducer.js","components/tableLog/buttonDelete.js","components/tableLog/Index.js","components/tableChart/Index.js","components/tableBar.js","components/timerComponents/input.js","components/alert.js","components/generate/helper.js","components/generate/Index.js","components/timerComponents/timerFolder/Index.js","components/timerComponents/timerFolder/helper.js","components/pageInfo/warning.js","components/pageInfo/info.js","components/pageInfo/Index.js","components/App.js","serviceWorker.js","reducersFolder/index.js","storeFolder/store.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","borderRadius","color","backgroundColor","ContainedButtons","props","classes","name","className","Button","variant","initialState","btnName","inputText","dataObject","tableLog","JSON","parse","localStorage","getItem","taskId","statusNavBar","setLog","type","payload","connect","store","main","dispatch","removeRowLogAction","removeRowLog","idTask","onClick","table","minWidth","linkDecoration","textDecoration","uniqid","require","useEffect","length","setItem","stringify","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","id","key","scope","task","timeStart","timeEnd","timeSpend","to","initialArr","Array","useState","fill","tableChart","setTableChart","date","Date","currDay","getDate","currMonth","getMonth","taskInfo","filter","item","day","month","timeSort","mathFunc","arrStr","matchNum","i","copyArr","stringTimeSpend","timeSpendMls","intTimeSpend","remainsTime","remainsTimeHours","Math","floor","currItem","nextItem","parseFloat","toFixed","currArrayString","matchingNumbers","match","options","title","text","style","series","data","legend","enabled","xAxis","categories","DrawChart","onChange","highcharts","Highcharts","constructorType","TabPanel","children","value","index","other","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","LinkTab","Tab","event","preventDefault","flexGrow","width","paddingTop","palette","background","paper","setNavBarStatusAction","setNavBarStatus","React","setValue","AppBar","position","Tabs","newValue","label","href","marginTop","textAlign","marginLeft","underline","borderBottom","inputStyle","display","alignItems","setInputText","noValidate","autoComplete","TextField","target","height","divRoot","justifyContent","outline","modelWiev","flexDirection","h1Style","fontWeight","fontSize","h2Style","closeBtnStyle","cursor","Alert","setDisplay","Modal","open","aria-describedby","square","setLogAction","currTime","now","arr","prevTimeEnd","timeEndMls","random","timeDay","timeMonth","push","toLocaleTimeString","timeStartMls","GenerateFunc","useStylesTimer","flexWrap","positionMainBlock","timerAlign","containerBtnGenerate","paddingRight","setBtnNameAction","setBtnName","setInputTextAction","setText","classesTimer","seconds","setSeconds","intervalID","setIntervalID","insideBtnStatus","setInsideBtnStatus","resultTime","newData","_","cloneDeep","secondCounter","setInterval","inputCheck","clearInterval","arrPusher","elevation","TimeRun","mainStyleBlock","h2StyleWarn","fontFamily","h1StyleWarn","Warning","spanStyle","Information","infoObject","useParams","newObj","App","path","Timer","Info","from","Boolean","window","location","hostname","rootReducer","combineReducers","state","action","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c185a2e0.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      borderRadius: '0px'\r\n    },\r\n    '& .MuiButton-containedSecondary': {\r\n      color: '#1432c8',\r\n      backgroundColor: 'white'\r\n    }\r\n  }\r\n}))\r\n\r\nexport default function ContainedButtons (props) {\r\n  const classes = useStyles()\r\n  const { name } = props\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button variant=\"contained\" color=\"secondary\">{name}</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nContainedButtons.propTypes = {\r\n  name: PropTypes.string.isRequired\r\n}\r\n","import _ from 'lodash'\r\n\r\nconst SET_BTNNAME = 'SET_BTNNAME'\r\nconst SET_INPUTTEXT = 'SET_INPUTTEXT'\r\nconst SET_LOG = 'SET_LOG'\r\nconst REMOVE_ROW_LOG = 'REMOVE_ROW_LOG'\r\nconst SET_NAV_BAR = 'SET_NAV_BAR'\r\n\r\nconst initialState = {\r\n  btnName: 'start',\r\n  inputText: '',\r\n  dataObject: {},\r\n  tableLog: JSON.parse(localStorage.getItem('arrLog')) || [],\r\n  taskId: 0,\r\n  statusNavBar: 0\r\n}\r\n\r\nexport function mainReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_BTNNAME:\r\n      return { ...state, btnName: action.payload }\r\n\r\n    case SET_INPUTTEXT:\r\n      return { ...state, inputText: action.payload }\r\n\r\n    case SET_LOG:\r\n      return { ...state, tableLog: action.payload }\r\n\r\n    case SET_NAV_BAR:\r\n      return { ...state, statusNavBar: action.payload }\r\n\r\n    case REMOVE_ROW_LOG:\r\n      return {\r\n        ...state,\r\n        tableLog: _.filter(state.tableLog, function (item) { return item.id !== action.payload })\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function setText (inputText) {\r\n  return {\r\n    type: 'SET_INPUTTEXT',\r\n    payload: inputText\r\n  }\r\n}\r\n\r\nexport function setBtnName (btnName) {\r\n  return {\r\n    type: 'SET_BTNNAME',\r\n    payload: btnName\r\n  }\r\n}\r\n\r\nexport function setLog (tableLog) {\r\n  return {\r\n    type: 'SET_LOG',\r\n    payload: tableLog\r\n  }\r\n}\r\n\r\nexport function removeRowLog (taskId) {\r\n  return {\r\n    type: 'REMOVE_ROW_LOG',\r\n    payload: taskId\r\n  }\r\n}\r\n\r\nexport function setNavBarStatus (statusNavBar) {\r\n  return {\r\n    type: 'SET_NAV_BAR',\r\n    payload: statusNavBar\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport { connect } from 'react-redux'\r\nimport { removeRowLog } from '../../reducersFolder/mainReducer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      borderRadius: '0px'\r\n    },\r\n    '& .MuiButton-containedSecondary': {\r\n      color: '#1432c8',\r\n      backgroundColor: 'white'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { taskId } = store.main\r\n  return {\r\n    taskId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeRowLogAction: taskId => dispatch(removeRowLog(taskId))\r\n  }\r\n}\r\n\r\nfunction ContainedButtonsDelete (props) {\r\n  const classes = useStyles()\r\n  const { idTask, removeRowLogAction } = props\r\n\r\n  const deleteRow = () => {\r\n    removeRowLogAction(idTask)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button variant=\"contained\" color=\"secondary\" onClick={deleteRow}>{'delete'}</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContainedButtonsDelete)\r\n\r\nContainedButtonsDelete.propTypes = {\r\n  removeRowLogAction: PropTypes.func.isRequired,\r\n  idTask: PropTypes.string.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport ContainedButtons from '../timerComponents/button'\r\nimport ContainedButtonsDelete from './buttonDelete'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  linkDecoration: {\r\n    textDecoration: 'none',\r\n    color: '#1432c8'\r\n  }\r\n})\r\n\r\nconst mapStateToProps = store => {\r\n  const { tableLog } = store.main\r\n  return {\r\n    tableLog\r\n  }\r\n}\r\n\r\nfunction BasicTable (props) {\r\n  const { tableLog } = props\r\n  const classes = useStyles()\r\n  const uniqid = require('uniqid')\r\n\r\n  useEffect(() => {\r\n    if (tableLog.length === 0) {\r\n      localStorage.setItem('arrLog', JSON.stringify([]))\r\n    } else {\r\n      localStorage.setItem('arrLog', JSON.stringify(tableLog))\r\n    }\r\n  }, [tableLog])\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">№</TableCell>\r\n            <TableCell align=\"center\">Task</TableCell>\r\n            <TableCell align=\"center\">Time start</TableCell>\r\n            <TableCell align=\"center\">Time end</TableCell>\r\n            <TableCell align=\"center\">time spend</TableCell>\r\n            <TableCell align=\"center\">info</TableCell>\r\n            <TableCell align=\"center\">delete</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {tableLog.map((row, id) => (\r\n            <TableRow key={uniqid()}>\r\n              <TableCell component=\"th\" scope=\"row\" > {id + 1} </TableCell>\r\n              <TableCell align=\"center\">{row.task}</TableCell>\r\n              <TableCell align=\"center\">{row.timeStart}</TableCell>\r\n              <TableCell align=\"center\">{row.timeEnd}</TableCell>\r\n              <TableCell align=\"center\">{row.timeSpend}</TableCell>\r\n              <TableCell align=\"center\">\r\n                <Link className={classes.linkDecoration} to={`/info/${row.id}`}> <ContainedButtons name={'info'}/></Link>\r\n              </TableCell>\r\n              <TableCell align=\"center\"><ContainedButtonsDelete idTask = {row.id}/></TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(BasicTable)\r\n\r\nBasicTable.propTypes = {\r\n  tableLog: PropTypes.array.isRequired\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\n// import _ from 'lodash'\r\n\r\nconst mapStateToProps = store => {\r\n  const { tableLog } = store.main\r\n  return {\r\n    tableLog\r\n  }\r\n}\r\n\r\nconst Charts = (props) => {\r\n  const initialArr = new Array(24)\r\n  const [tableChart, setTableChart] = useState(initialArr.fill(0, 0))\r\n  const { tableLog } = props\r\n  const date = new Date()\r\n  const currDay = date.getDate()\r\n  const currMonth = date.getMonth()\r\n  const taskInfo = tableLog.filter(item => item.day === currDay && item.month === currMonth)\r\n\r\n  useEffect(() => {\r\n    setTableChart(initialArr.fill(0, 0))\r\n    timeSort()\r\n  }, [tableLog])\r\n\r\n  const mathFunc = (arrStr, matchNum, i) => {\r\n    const copyArr = tableChart\r\n    const stringTimeSpend = arrStr.timeSpendMls\r\n    const intTimeSpend = stringTimeSpend / 60000\r\n    const remainsTime = (intTimeSpend - (60 - +matchNum[1]))\r\n    const remainsTimeHours = Math.floor(remainsTime / 60)\r\n    const currItem = +matchNum[0]\r\n    let nextItem = currItem + 1\r\n\r\n    if (stringTimeSpend < (60 - +matchNum[1]) * 60000) {\r\n      copyArr[currItem + 1] += parseFloat(intTimeSpend.toFixed())\r\n    } else {\r\n      copyArr[currItem + 1] += (parseFloat(intTimeSpend.toFixed()) - parseFloat((remainsTime).toFixed()))\r\n      if (remainsTimeHours > 0) {\r\n        for (let i = 0; i < remainsTimeHours; i++) {\r\n          nextItem++\r\n          copyArr[nextItem] = 60\r\n        }\r\n      }\r\n      copyArr[nextItem + 1] = parseFloat((remainsTime % 60).toFixed())\r\n      setTableChart(copyArr)\r\n    }\r\n  }\r\n\r\n  const timeSort = () => {\r\n    for (let i = 0; i < taskInfo.length; i++) {\r\n      const currArrayString = taskInfo[i]\r\n      const stringTimeStart = currArrayString.timeStart\r\n      const settings = /\\d+/g\r\n      const matchingNumbers = stringTimeStart.match(settings)\r\n      if ((+matchingNumbers[0] + 1) < 24) {\r\n        mathFunc(currArrayString, matchingNumbers, i)\r\n      }\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    title: {\r\n      text: 'Time Chart',\r\n      style: {\r\n        color: '#1432c8'\r\n      }\r\n    },\r\n    series: [{\r\n      type: 'column',\r\n      data: tableChart\r\n    }],\r\n\r\n    legend: {\r\n      enabled: false\r\n    },\r\n    xAxis: {\r\n      categories: ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11',\r\n        '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23']\r\n    }\r\n  }\r\n\r\n  const DrawChart = () => {\r\n    return (\r\n      <div>\r\n        <HighchartsReact\r\n          onChange={timeSort()}\r\n          highcharts={Highcharts}\r\n          constructorType={'chart'}\r\n          options={options}\r\n        />\r\n     </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <DrawChart/>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(Charts)\r\n\r\nCharts.propTypes = {\r\n  tableLog: PropTypes.array.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Box from '@material-ui/core/Box'\r\nimport BasicTable from './tableLog/Index'\r\nimport Charts from './tableChart/Index'\r\nimport { connect } from 'react-redux'\r\nimport { setNavBarStatus } from '../reducersFolder/mainReducer'\r\n\r\nfunction TabPanel (props) {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component={'span'}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n}\r\n\r\nfunction a11yProps (index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    'aria-controls': `nav-tabpanel-${index}`\r\n  }\r\n}\r\n\r\nfunction LinkTab (props) {\r\n  return (\r\n    <Tab\r\n      component=\"a\"\r\n      onClick={(event) => {\r\n        event.preventDefault()\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '90%',\r\n    paddingTop: 20,\r\n    backgroundColor: theme.palette.background.paper,\r\n\r\n    '& .MuiAppBar-colorPrimary': {\r\n      backgroundColor: '#00bcd6'\r\n    }\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { statusNavBar } = store.main\r\n  return {\r\n    statusNavBar\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNavBarStatusAction: statusNavBar => dispatch(setNavBarStatus(statusNavBar))\r\n  }\r\n}\r\n\r\nfunction NavTabs (props) {\r\n  const { setNavBarStatusAction } = props\r\n  const classes = useStyles()\r\n  const [value, setValue] = React.useState(0)\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n    setNavBarStatusAction(newValue)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          variant=\"fullWidth\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"nav tabs example\"\r\n        >\r\n          <LinkTab label=\"tasks log\" href=\"/taskLog\" {...a11yProps(0)} />\r\n          <LinkTab label=\"tasks chart\" href=\"/taskChart\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <BasicTable/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Charts/>\r\n      </TabPanel>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NavTabs)\r\n\r\nNavTabs.propTypes = {\r\n  setNavBarStatusAction: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = store => {\r\n  const { inputText } = store.main\r\n  return {\r\n    inputText\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      marginTop: '50px',\r\n      width: '25ch'\r\n    },\r\n    '& .MuiFormLabel-root': {\r\n      color: '#1432c8',\r\n      textAlign: 'center',\r\n      marginLeft: '40px'\r\n    }\r\n  },\r\n  underline: {\r\n    '& ::before': {\r\n      borderBottom: '1px solid rgba(212, 212, 212, 0.42)'\r\n    }\r\n  },\r\n  inputStyle: {\r\n    display: 'absolute',\r\n    alignItems: 'center'\r\n  }\r\n}))\r\n\r\nfunction InputTaskName (props) {\r\n  const classes = useStyles()\r\n  const { setInputText, inputText } = props\r\n  const handleChange = (event) => {\r\n    setInputText(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div id = 'mainInput' className={classes.inputStyle}>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <TextField className={classes.underline} id=\"standard-basic\" label=\"Name of your task\" value={inputText} onChange={handleChange}/>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(InputTaskName)\r\n\r\nInputTaskName.propTypes = {\r\n  setInputText: PropTypes.func.isRequired,\r\n  inputText: PropTypes.string.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Modal from '@material-ui/core/Modal'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(0),\r\n      height: theme.spacing(0)\r\n    }\r\n  },\r\n  divRoot: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: '20%',\r\n    outline: '0'\r\n  },\r\n  modelWiev: {\r\n    width: '55%',\r\n    height: '150px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start'\r\n  },\r\n  h1Style: {\r\n    color: '#bd3063',\r\n    fontWeight: '500',\r\n    fontSize: '15pt',\r\n    marginLeft: '5%',\r\n    marginTop: '20px'\r\n  },\r\n  h2Style: {\r\n    color: '#525252',\r\n    marginLeft: '5%',\r\n    marginTop: '20px'\r\n  },\r\n  closeBtnStyle: {\r\n    cursor: 'pointer',\r\n    color: '#58daee',\r\n    fontWeight: '400',\r\n    fontSize: '14pt',\r\n    marginLeft: '90%',\r\n    marginTop: '20px'\r\n  }\r\n}))\r\n\r\nexport default function Alert (props) {\r\n  const classes = useStyles()\r\n  const { display, setDisplay } = props\r\n\r\n  const btnClose = () => { setDisplay(false) }\r\n\r\n  return (\r\n   <Modal open={display} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\r\n     <div className={classes.divRoot}>\r\n       <Paper variant=\"outlined\" square className={classes.modelWiev}>\r\n         <div className={classes.h1Style}>Emty task name</div>\r\n         <div className={classes.h2Style}>You are trying close your task without name, enter the title and try again!</div>\r\n         <div className={classes.closeBtnStyle} onClick = {btnClose}>close</div>\r\n       </Paper>\r\n     </div>\r\n   </Modal>\r\n  )\r\n}\r\n\r\nAlert.propTypes = {\r\n  setDisplay: PropTypes.func.isRequired,\r\n  display: PropTypes.bool.isRequired\r\n}\r\n","export const GenerateFunc = () => {\r\n  const uniqid = require('uniqid')\r\n  const currTime = Date.now()\r\n  const arr = []\r\n  for (let i = 0; i < 10; i++) {\r\n    const prevTimeEnd = i === 0 ? currTime - 36800000 : arr[i - 1]\r\n    const timeStart = i === 0 ? prevTimeEnd : prevTimeEnd.timeEndMls + 600000\r\n    const timeSpend = Math.floor(Math.random() * 5400000)\r\n    const timeEnd = timeSpend + timeStart\r\n    const date = new Date()\r\n    const timeDay = date.getDate()\r\n    const timeMonth = date.getMonth()\r\n    arr.push({\r\n      id: uniqid(),\r\n      task: `task ${i + 1}`,\r\n      timeStart: new Date(1, 1, 1, 0, 0, 0, timeStart).toLocaleTimeString(),\r\n      timeEnd: new Date(1, 1, 1, 0, 0, 0, timeEnd).toLocaleTimeString(),\r\n      timeSpend: new Date(1, 1, 1, 0, 0, 0, timeSpend).toLocaleTimeString(),\r\n      timeStartMls: timeStart,\r\n      timeEndMls: timeEnd,\r\n      timeSpendMls: timeSpend,\r\n      day: timeDay,\r\n      month: timeMonth\r\n    })\r\n  }\r\n  localStorage.setItem('arrLog', JSON.stringify(arr))\r\n  return (arr)\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport { GenerateFunc } from './helper'\r\nimport { connect } from 'react-redux'\r\nimport { setLog } from '../../reducersFolder/mainReducer'\r\n\r\nconst mapStateToProps = store => {\r\n  const { tableLog, statusNavBar } = store.main\r\n  return {\r\n    tableLog,\r\n    statusNavBar\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setLogAction: tableLog => dispatch(setLog(tableLog))\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      borderRadius: '0px'\r\n    },\r\n    '& .MuiButton-containedSecondary': {\r\n      color: '#1432c8',\r\n      backgroundColor: 'white'\r\n    }\r\n  }\r\n}))\r\n\r\nfunction ContainedButtonsGenerate (props) {\r\n  const classes = useStyles()\r\n  const { setLogAction, statusNavBar } = props\r\n\r\n  const handleClick = () => {\r\n    if (statusNavBar !== 1) {\r\n      setLogAction(GenerateFunc())\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleClick}> generate </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContainedButtonsGenerate)\r\n\r\nContainedButtonsGenerate.propTypes = {\r\n  setLogAction: PropTypes.func.isRequired,\r\n  statusNavBar: PropTypes.number.isRequired\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport ContainedButtons from '../button'\r\nimport NavTabs from '../../tableBar'\r\nimport InputTaskName from '../input'\r\nimport Alert from '../../alert'\r\nimport { connect } from 'react-redux'\r\nimport { setBtnName, setText, setLog } from '../../../reducersFolder/mainReducer'\r\nimport ContainedButtonsGenerate from '../../generate/Index'\r\nimport { arrPusher } from './helper'\r\nimport _ from 'lodash'\r\n\r\nconst useStylesTimer = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(20),\r\n      height: theme.spacing(20),\r\n      borderRadius: '50%'\r\n    }\r\n  },\r\n  positionMainBlock: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  timerAlign: {\r\n    display: 'flex',\r\n    fontWeight: '500',\r\n    fontSize: '18pt',\r\n    color: '#1432c8',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  containerBtnGenerate: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n    paddingRight: '80px'\r\n  }\r\n}))\r\n\r\nconst mapStateToProps = store => {\r\n  const { btnName, inputText, tableLog, statusNavBar } = store.main\r\n  return {\r\n    btnName,\r\n    inputText,\r\n    tableLog,\r\n    statusNavBar\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setBtnNameAction: btnName => dispatch(setBtnName(btnName)),\r\n    setInputTextAction: inputText => dispatch(setText(inputText)),\r\n    setLogAction: tableLog => dispatch(setLog(tableLog))\r\n  }\r\n}\r\n\r\nfunction Timer (props) {\r\n  const { setBtnNameAction, btnName, setInputTextAction, inputText, setLogAction, tableLog, statusNavBar } = props\r\n  const classesTimer = useStylesTimer()\r\n  const currTime = Date.now()\r\n  const [seconds, setSeconds] = useState(0)\r\n  const [intervalID, setIntervalID] = useState(0)\r\n  const [insideBtnStatus, setInsideBtnStatus] = useState(false)\r\n  const resultTime = new Date(1, 1, 1, 0, 0, seconds, 0).toLocaleTimeString()\r\n  const newData = _.cloneDeep(tableLog)\r\n\r\n  useEffect(() => {\r\n    if (JSON.parse(localStorage.getItem('timerStatus')) === null) {\r\n      localStorage.setItem('timerStatus', false)\r\n    }\r\n    if (JSON.parse(localStorage.getItem('timerStatus')) === true) {\r\n      setBtnNameAction('stop')\r\n      setSeconds((currTime - JSON.parse(localStorage.getItem('dateTimerRun'))) / 1000)\r\n      secondCounter()\r\n    }\r\n  }, [])\r\n\r\n  const secondCounter = () => {\r\n    setIntervalID(setInterval(() => {\r\n      setSeconds(seconds => seconds + 1)\r\n    }, 1000))\r\n  }\r\n\r\n  const inputCheck = () => {\r\n    if (inputText == false) {\r\n      setInsideBtnStatus(true)\r\n    } else {\r\n      if (statusNavBar !== 1) {\r\n        setBtnNameAction('start')\r\n        clearInterval(intervalID)\r\n        setLogAction(arrPusher(newData, currTime, inputText))\r\n        setInputTextAction('')\r\n        localStorage.setItem('timerStatus', false)\r\n        setSeconds(0)\r\n      }\r\n    }\r\n  }\r\n\r\n  const timerLoader = () => {\r\n    const TimeRun = Date.now()\r\n    if (JSON.parse(localStorage.getItem('timerStatus')) === false) {\r\n      secondCounter()\r\n      setBtnNameAction('stop')\r\n      localStorage.setItem('dateTimerRun', TimeRun)\r\n      localStorage.setItem('timerStatus', true)\r\n    } else {\r\n      inputCheck()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classesTimer.positionMainBlock}>\r\n        <InputTaskName setInputText={setInputTextAction}/>\r\n        <div id='mainTimer' className={classesTimer.positionMainBlock}>\r\n          <div className={classesTimer.root}>\r\n            <Paper elevation={3} className={classesTimer.timerAlign}>{resultTime}</Paper>\r\n          </div>\r\n          <div onClick={timerLoader}><ContainedButtons name={btnName}/></div>\r\n        </div>\r\n        <NavTabs/>\r\n      </div>\r\n      <div className={classesTimer.containerBtnGenerate}>\r\n        <ContainedButtonsGenerate/>\r\n      </div>\r\n      <Alert display={insideBtnStatus} setDisplay={setInsideBtnStatus}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Timer)\r\n\r\nTimer.propTypes = {\r\n  setBtnNameAction: PropTypes.func.isRequired,\r\n  btnName: PropTypes.string.isRequired,\r\n  setInputTextAction: PropTypes.func.isRequired,\r\n  inputText: PropTypes.string.isRequired,\r\n  setLogAction: PropTypes.func.isRequired,\r\n  tableLog: PropTypes.array.isRequired,\r\n  statusNavBar: PropTypes.number.isRequired\r\n}\r\n","export const arrPusher = (arr, currTime, inputText) => {\r\n  const uniqid = require('uniqid')\r\n  const date = new Date()\r\n  const timeDay = date.getDate()\r\n  const timeMonth = date.getMonth()\r\n  arr.push({\r\n    id: uniqid(),\r\n    task: inputText,\r\n    timeStart: new Date(1, 1, 1, 0, 0, 0, JSON.parse(localStorage.getItem('dateTimerRun')) + 7200000).toLocaleTimeString(),\r\n    timeEnd: new Date(currTime).toLocaleTimeString(),\r\n    timeSpend: new Date(1, 1, 1, 0, 0, 0, currTime - JSON.parse(localStorage.getItem('dateTimerRun'))).toLocaleTimeString(),\r\n    timeStartMls: JSON.parse(localStorage.getItem('dateTimerRun')) + 7200000,\r\n    timeEndMls: currTime,\r\n    timeSpendMls: currTime - JSON.parse(localStorage.getItem('dateTimerRun')),\r\n    day: timeDay,\r\n    month: timeMonth\r\n  })\r\n  localStorage.setItem('arrLog', JSON.stringify(arr))\r\n  return (arr)\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ContainedButtons from '../timerComponents/button'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mainStyleBlock: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  h2StyleWarn: {\r\n    color: 'black',\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontSize: '18px',\r\n    fontWeight: '500',\r\n    paddingTop: '30px'\r\n  },\r\n  h1StyleWarn: {\r\n    color: 'rgb(189, 48, 99)',\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontSize: '28px',\r\n    fontWeight: '500',\r\n    paddingTop: '70px'\r\n  },\r\n  linkDecoration: {\r\n    textDecoration: 'none',\r\n    color: '#1432c8'\r\n  }\r\n}))\r\n\r\nexport default function Warning () {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.mainStyleBlock}>\r\n    <div className={classes.h1StyleWarn}>WARNING!!!</div>\r\n    <div className={classes.h2StyleWarn}>There is no such issue ID</div>\r\n    <Link className={classes.linkDecoration} to=\"/timer-task\"><ContainedButtons name={'return'}/></Link>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ContainedButtons from '../timerComponents/button'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  h2Style: {\r\n    color: '#1432c8',\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontSize: '18px',\r\n    fontWeight: '500',\r\n    paddingTop: '30px'\r\n  },\r\n  h1Style: {\r\n    color: 'black',\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontSize: '28px',\r\n    fontWeight: '500',\r\n    paddingTop: '70px'\r\n  },\r\n  mainStyleBlock: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  spanStyle: {\r\n    color: 'black'\r\n  },\r\n  linkDecoration: {\r\n    textDecoration: 'none',\r\n    color: '#1432c8'\r\n  }\r\n}))\r\n\r\nexport default function Information (props) {\r\n  const { infoObject } = props\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.mainStyleBlock}>\r\n      <div className={classes.h1Style}>Task information</div>\r\n      <div className={classes.h2Style}><span className={classes.spanStyle}>{'Task name :'}</span> {infoObject.task}</div>\r\n      <div className={classes.h2Style}><span className={classes.spanStyle}>{'Time start :'}</span> {infoObject.timeStart}</div>\r\n      <div className={classes.h2Style}><span className={classes.spanStyle}>{'Time stop :'}</span> {infoObject.timeEnd}</div>\r\n      <div className={classes.h2Style}><span className={classes.spanStyle}>{'Time spend :'}</span> {infoObject.timeSpend}</div>\r\n      <Link className={classes.linkDecoration} to=\"/timer-task\"><ContainedButtons name={'return'}/></Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nInformation.propTypes = {\r\n  infoObject: PropTypes.array.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport Warning from './warning'\r\nimport Information from './info'\r\n\r\nconst mapStateToProps = store => {\r\n  const { tableLog } = store.main\r\n  return {\r\n    tableLog\r\n  }\r\n}\r\n\r\nconst Info = (props) => {\r\n  const { tableLog } = props\r\n  const { id } = useParams()\r\n  const taskInfo = tableLog.filter(item => item.id === id)\r\n  const newObj = taskInfo[0] || 'none'\r\n\r\n  if (newObj === 'none') return <Warning/>\r\n  return <Information infoObject={newObj}/>\r\n}\r\n\r\nexport default connect(mapStateToProps)(Info)\r\n\r\nInfo.propTypes = {\r\n  tableLog: PropTypes.array.isRequired\r\n}\r\n","import React from 'react'\nimport Timer from './timerComponents/timerFolder/Index'\nimport Info from './pageInfo/Index'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\n\nexport default function App () {\n  return (\n    <div >\n      <Router>\n        <Switch>\n          <Route path='/timer-task' component={Timer} />\n          <Route path='/Info/:id' component={Info} />\n          <Redirect from='/' to='/timer-task'/>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux'\r\nimport { mainReducer } from './mainReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  main: mainReducer\r\n})\r\n","import { createStore } from 'redux'\r\nimport { rootReducer } from '../reducersFolder/index'\r\nimport { devToolsEnhancer } from 'redux-devtools-extension'\r\n\r\nexport const store = createStore(rootReducer, devToolsEnhancer())\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'fontsource-roboto';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './storeFolder/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}